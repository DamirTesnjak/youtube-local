services:
  web:
    container_name: YTLocal
    build:
      context: .
      dockerfile: ./nextjs/Dockerfile
    ports:
      - '4000:3000'
    networks:
      - app_network
    privileged: true # Grants the container additional privileges
    volumes:
      - '~/test:/host:rw,Z'
    stdin_open: true # Keep stdin open (equivalent to `-i` flag)
    tty: true # Allocate a pseudo-TTY (equivalent to `-t` flag)
    user: "${UID}:${GID}"
    env_file:
      - .env
    command: bash -c "[ $$(uname -s) = 'Linux' ] && chown -R $${UID}:$${GID} /host && chmod -R 770 /host; node server.js"
    depends_on:
      - websocket
      - videostreaming
    restart: on-failure

  websocket:
    container_name: websocket
    build:
      context: .
      dockerfile: ./webSocket/Dockerfile
    ports:
      - '5001:5001'
    networks:
      - app_network
    restart: on-failure

  videostreaming:
    container_name: videostreaming
    build:
      context: .
      dockerfile: videoStreamingServer/Dockerfile
    ports:
      - '4001:3000'
    networks:
      - app_network
    privileged: true # Grants the container additional privileges
    volumes:
      - '~/test:/host:rw,Z'
    stdin_open: true # Keep stdin open (equivalent to `-i` flag)
    tty: true # Allocate a pseudo-TTY (equivalent to `-t` flag)
    user: "${UID}:${GID}"
    env_file:
      - .env
    command: bash -c "[ $$(uname -s) = 'Linux' ] && chown -R $${UID}:$${GID} /host && chmod -R 770 /host; node server.js"
    restart: on-failure

  nginx:
    image: nginx:1.27.4
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - '80:80'
    depends_on:
      - web
      - websocket
      - videostreaming
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
